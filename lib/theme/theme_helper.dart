import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary.withOpacity(0.41),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(20.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.black90001,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(15.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.amber900,
      ),
      dividerTheme: DividerThemeData(
        thickness: 2,
        space: 2,
        color: appTheme.black90001.withOpacity(0.14),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();

  void changeTheme(String s) {}
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.whiteA700.withOpacity(0.82),
          fontSize: 15.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray900.withOpacity(0.56),
          fontSize: 12.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w400,
        ),
        displayLarge: TextStyle(
          color: appTheme.orange90001,
          fontSize: 60.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w500,
        ),
        displayMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 40.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        displaySmall: TextStyle(
          color: appTheme.gray900,
          fontSize: 36.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: appTheme.gray900,
          fontSize: 32.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w500,
        ),
        headlineMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: 28.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.gray900,
          fontSize: 25.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.black90001.withOpacity(0.38),
          fontSize: 12.fSize,
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 11.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        labelSmall: TextStyle(
          color: appTheme.orange90001,
          fontSize: 8.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.redA700,
          fontSize: 20.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.black90001,
          fontSize: 16.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray900.withOpacity(0.63),
          fontSize: 15.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFFF0F2F4),
    primaryContainer: Color(0XFF4A4848),
    secondaryContainer: Color(0XFFF3F3F3),

    // Error colors
    errorContainer: Color(0XFFF98628),
    onError: Color(0XFFEFE9E9),
    onErrorContainer: Color(0XFF281B1B),

    // On colors(text colors)
    onPrimary: Color(0XFF2B2A2A),
    onPrimaryContainer: Color(0XFF050505),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber900 => Color(0XFFFF7200);
  Color get amber90001 => Color(0XFFFE7404);
  Color get amber90002 => Color(0XFFFF7608);
  Color get amber90003 => Color(0XFFFE7607);

  // Black
  Color get black900 => Color(0XFF0A0A0A);
  Color get black90001 => Color(0XFF000000);

  // BlueGray
  Color get blueGray100 => Color(0XFFD9D9D9);
  Color get blueGray50 => Color(0XFFF0F1F4);
  Color get blueGray5001 => Color(0XFFECEEF3);
  Color get blueGray5019 => Color(0X19F1F1F1);
  Color get blueGray600 => Color(0XFF5C6674);
  Color get blueGray900 => Color(0XFF353535);
  Color get blueGray90001 => Color(0XFF2F2F2F);
  Color get blueGray90002 => Color(0XFF333333);
  Color get blueGray90003 => Color(0XFF2B3544);

  // DeepOrange
  Color get deepOrange100 => Color(0XFFE0C7B6);
  Color get deepOrange200 => Color(0XFFEBB387);
  Color get deepOrange20001 => Color(0XFFFCBC8B);
  Color get deepOrange300 => Color(0XFFE38D48);
  Color get deepOrange50 => Color(0XFFF8E8E9);
  Color get deepOrange800 => Color(0XFFC35A2A);
  Color get deepOrange80001 => Color(0XFFC76030);
  Color get deepOrangeA10077 => Color(0X77FFAE6D);

  // DeepPurple
  Color get deepPurple900 => Color(0XFF2B18A2);

  // Gray
  Color get gray100 => Color(0XFFF3F5F8);
  Color get gray300 => Color(0XFFE9E7E4);
  Color get gray30001 => Color(0XFFE4E1E1);
  Color get gray50 => Color(0XFFF7FAFF);
  Color get gray600 => Color(0XFF6F7276);
  Color get gray60001 => Color(0XFF888484);
  Color get gray60099 => Color(0X99808080);
  Color get gray700 => Color(0XFF545455);
  Color get gray70001 => Color(0XFF6C6262);
  Color get gray800 => Color(0XFF493E35);
  Color get gray80001 => Color(0XFF543720);
  Color get gray900 => Color(0XFF051328);
  Color get gray90001 => Color(0XFF061428);

  // GrayD
  Color get gray300D8 => Color(0XD8E8E2DC);

  // Grayf
  Color get gray6003f => Color(0X3F807E7E);

  // Greene
  Color get green8008e => Color(0X8E1C9728);

  // Orange
  Color get orange200 => Color(0XFFFFC190);
  Color get orange300 => Color(0XFFFEA35A);
  Color get orange900 => Color(0XFFC75900);
  Color get orange90001 => Color(0XFFCF5C00);
  Color get orangeA200 => Color(0XFFFF933D);
  Color get orangeA20001 => Color(0XFFFF9D4D);
  Color get orangeA20002 => Color(0XFFF48F3D);
  Color get orangeA20003 => Color(0XFFFC9949);
  Color get orangeA20004 => Color(0XFFD8A253);
  Color get orangeA700 => Color(0XFFFF6814);

  // Red
  Color get red100 => Color(0XFFF6CFD1);
  Color get red200 => Color(0XFFD0A2A0);
  Color get red300 => Color(0XFFDA6664);
  Color get red30001 => Color(0XFFF46E6C);
  Color get red50 => Color(0XFFFFEBEB);
  Color get red500 => Color(0XFFF84242);
  Color get red600 => Color(0XFFEF2427);
  Color get red60001 => Color(0XFFDB4845);
  Color get red800 => Color(0XFFC72825);
  Color get red900 => Color(0XFFC1181B);
  Color get redA700 => Color(0XFFFF0000);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow900 => Color(0XFFCD7228);
  Color get yellow90001 => Color(0XFFFF841F);
  Color get yellow90002 => Color(0XFFFB7F1A);
  Color get yellow90003 => Color(0XFFED7E24);
  Color get yellow90004 => Color(0XFFFE780D);
  Color get yellow90005 => Color(0XFFF07614);
  Color get yellow90006 => Color(0XFFF07817);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
